services:
  ## ---------- PRODUCTION
  # App build & servie via nginx

  website-insash-prod:
    # nginx + frontend
    build:
      context: .
      dockerfile: dockerfile.prod
    profiles:
      - prod
    image: website-insash
    container_name: website-insash
    ports:
      - "10000:80"
    volumes:
      - ./insash_website_data/public/images/member/custom:/var/www/website/public/images/member/custom
      - ./insash_website_data/public/images/document:/var/www/website/public/images/document
      - ./insash_website_data/public/markdown:/var/www/website/public/markdown
    networks:
      - website

  website-insash-backend:
    build: insash_website_backend
    image: website-insash-backend
    container_name: website-insash-backend
    profiles:
      - prod
    env_file:
      - path: ./.env
      - path: ./insash_website_backend/cmd/.env
    networks:
      - website

  ## ---------- DEVELOPMENT
  # App en live server via Andular

  website-insash-dev:
    # live service for dev
    build:
      context: .
      dockerfile: dockerfile.dev
    profiles:
      - dev
    image: website-insash-dev
    container_name: website-insash-dev
    ports:
      - "4200:4200"
    volumes:
      - ./insash_website_frontend:/app
      - /app/node_modules
    networks:
      - website

  website-insash-backend-dev:
    build: insash_website_backend
    image: website-insash-backend-dev
    container_name: website-insash-backend-dev
    ports:
      - "8080:8080"
    profiles:
      - dev
    env_file:
      - path: ./.env
      - path: ./insash_website_backend/cmd/.env
    networks:
      - website

  website-insash-database:
    image: postgres:16
    container_name: website-insash-database
    env_file:
      - path: ./.env
    volumes:
      - ./insash_website_data/init_database/database.sql:/docker-entrypoint-initdb.d/database.sql
      - ./insash_website_data/postgresql/data:/var/lib/postgresql/data 
    networks:
      - website

networks:
  website:
    driver: bridge
